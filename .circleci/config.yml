version: 2
defaults: &defaults
  macos:
    xcode: "9.1"
    environment:
      LANG: en_US.UTF-8
jobs:
  test_swift_3:
    <<: *defaults
    steps:
      - checkout      
      - run: brew install kylef/formulae/swiftenv
      - run: swiftenv version; swift --version; swift package --version;      
      - run: echo "3.0" > .swift-version
      - run: swiftenv version; swift --version; swift package --version;      
      - run: swiftenv local 3.0
      - run: bundle install
      # Only bootstrap if we have updated dependencies since our last cache.
      - restore_cache:
          keys:
            - carthage_cache
      - run: scripts/bootstrap-if-needed.sh 
      - run: rake test
      - run: rm .swift-version
      - save_cache:
          key: carthage_cache
          paths: 
            - Carthage
  test_swift_4:
      <<: *defaults
      steps:
        - checkout      
        - run: brew install kylef/formulae/swiftenv
        - run: swiftenv version; swift --version; swift package --version;      
        - run: echo "4.0" > .swift-version
        - run: swiftenv version; swift --version; swift package --version;      
        - run: swiftenv local 4.0
        - run: swiftenv version; swift --version; swift package --version;      
        - run: bundle install
        # Only bootstrap if we have updated dependencies since our last cache.
        - restore_cache:
            keys:
              - carthage_cache
        - run: scripts/bootstrap-if-needed.sh 
        - run: rake test
        - run: rm .swift-version
        - save_cache:
            key: carthage_cache
            paths: 
              - Carthage    

  test_integration_carthage:
    <<: *defaults
    steps:
      - checkout  
      - restore_cache:
          keys:
            - carthage_cache      
      - run: scripts/bootstrap-if-needed.sh 
      - run: rake test:carthage
      - save_cache:
          key: carthage_cache
          paths: 
            - Carthage      
  build_demo:
    <<: *defaults
    steps:
      - run: curl -sS https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash           
      - checkout     
      - run: bundle install
      - run: pwd ; ls -all; cd Demo ; bundle exec pod repo update
      # Verbose to keep CI alive during long Specs repo setups.  
      - run: cd Demo ; bundle exec pod install --verbose
      - run: rake build_demo 
  danger_codecov:
    <<: *defaults
    steps:
      - checkout
      - run: brew install swiftlint
      - run: bundle install
      - run:
          command: |
            bundle exec danger
            bash <(curl -s https://codecov.io/bash) -J Moya                  
workflows:
  version: 2
  pr_build:
    jobs:
      - test_swift_3
      - test_swift_4
      - test_integration_carthage
      - build_demo     
      - danger_codecov:
          requires:
            - test_swift_3
            - test_swift_4
            - test_integration_carthage  
            - build_demo